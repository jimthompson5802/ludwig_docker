ARG PYTHON_VERSION=3.6
ARG LINUX_DISTRO=buster
FROM python:${PYTHON_VERSION}-${LINUX_DISTRO}

# get current with linux distro and install required tools
RUN apt-get -y update \
    && apt-get -y install git libsndfile1 cmake \
        wget unzip graphviz

# install other required tools
RUN pip install \
    jupyterlab nbconvert ipywidgets \
    mkdocs'<1.3' \
    mkdocs-material mike Markdown>='3.0.1' \
    pydot pydotplus graphviz \
    matplotlib IProgress \
    nltk dill

# install pycharm related test dependencies
RUN pip install pytest-pycharm pytest-xdist pytest-cov


# setup for ludwig install
WORKDIR /app
COPY . /app

# remove baseline torc version from requirements files
# to allow Torch version specified for this build
#RUN cat requirements.txt | sed -e '/^torch[>=<]/d' -e '/^tensorflow[>=<]/d' \
#        > requirements-temp \
#        && mv requirements-temp requirements.txt \
#      cat requirements_image.txt | sed -e '/^torchvision[>=<]/d' > requirements-temp \
#            && mv requirements-temp requirements_image.txt \
#      cat requirements_audio.txt | sed -e '/^torchaudio[>=<]/d' > requirements-temp \
#        && mv requirements-temp requirements_audio.txt \
#    && cat requirements_horovod.txt | \
#      sed 's/\[pytorch\]//g' > requirements-temp \
#    && mv requirements-temp requirements_horovod.txt


ARG TORCH_VERSION=1.9.0
ARG TORCH_VISION_VERSION=0.10.0
ARG TORCH_AUDIO_VERSION=0.9.0
ENV HOROVOD_WITHOUT_TENSORFLOW=1
ENV HOROVOD_WITHOUT_MPI=1
ENV HOROVOD_WITH_PYTORCH=1
ENV HOROVOD_WITHOUT_MXNET=1
ENV MAKEFLAGS="-j 12"
# install ludwig and pre-reqs
RUN \
    echo -e "Using TORCH Version " ${TORCH_VERSION} "\n" \
    && pip install --timeout=60 torch==${TORCH_VERSION} \
      torchvision==${TORCH_VISION_VERSION} \
      torchaudio==${TORCH_AUDIO_VERSION} \
      pytorch-lightning==1.4.4 \
    && pip install --timeout=60 --no-build-isolation --no-use-pep517 ConfigSpace \
    && pip install -e .[test]

# install graph vizualization
RUN pip install -U git+https://github.com/szagoruyko/pytorchviz.git@master

# install torchtest packages
RUN pip install --upgrade torchtest

# to debug memory leak
RUN pip install pympler

# code quality checker
RUN pip install pre-commit


# set working dir for the project folder
WORKDIR /opt/project
