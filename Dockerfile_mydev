ARG PYTHON_VERSION=3.6
ARG LINUX_DISTRO=buster
FROM python:${PYTHON_VERSION}-${LINUX_DISTRO}

# get current with linux distro and install required tools
RUN apt-get -y update \
    && apt-get -y install git libsndfile1 cmake \
        wget unzip graphviz

# install other required tools
RUN pip install \
    jupyterlab nbconvert \
    mkdocs mkdocs-material \
    pydot pydotplus graphviz \
    nltk dill

# install pycharm related test dependencies
RUN pip install pytest-pycharm pytest-xdist pytest-cov

# setup for ludwig install
WORKDIR /app
COPY . /app

# remove baseline tensorflow version from requirements files
# to allow TF version specified for this build
RUN cat requirements.txt | sed '/^tensorflow[>=<]/d' > requirements-temp && mv requirements-temp requirements.txt \
    && cat requirements_horovod.txt | sed 's/\[tensorflow\]//g' > requirements-temp && mv requirements-temp requirements_horovod.txt


ARG TENSORFLOW_VERSION=2.3.1
ENV HOROVOD_WITH_TENSORFLOW=1
ENV HOROVOD_WITHOUT_MPI=1
ENV HOROVOD_WITHOUT_PYTORCH=1
ENV HOROVOD_WITHOUT_MXNET=1

# install ludwig and pre-reqs
RUN \
    if [ ${TENSORFLOW_VERSION} = "nite" ]; \
    then \
        echo -e "Installing tf-nightly" "\n" \
        && pip install tf-nightly \
        && pip install --no-cache-dir git+https://github.com/horovod/horovod.git@master; \
    else \
        echo -e "Using TF Version " ${TENSORFLOW_VERSION} "\n" \
        && pip install tensorflow==${TENSORFLOW_VERSION}; \
    fi; \
    pip install --no-build-isolation --no-use-pep517 ConfigSpace \
    && pip install -e .[test]

# additional packages for shapley value integration R&D
RUN pip install shap xgboost

# set working dir for the project folder
WORKDIR /opt/project
